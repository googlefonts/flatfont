# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Ufo

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/
class FontInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = FontInfo()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsFontInfo(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # FontInfo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#generic-identification-information
    # FontInfo
    def FamilyName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def StyleName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def StyleMapFamilyName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def StyleMapStyleName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def VersionMajor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def VersionMinor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#generic-legal-information
    # FontInfo
    def Copyright(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def Trademark(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#generic-dimension-information
    # FontInfo
    def UnitsPerEm(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def Descender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def XHeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def CapHeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def Ascender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def ItalicAngle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#generic-miscellaneous-information
    # FontInfo
    def Note(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#gasp-range-record-format
    # FontInfo
    def OpenTypeGaspRangeRecords(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from FlatFont.Ufo.OpenTypeGaspRangeRecord import OpenTypeGaspRangeRecord
            obj = OpenTypeGaspRangeRecord()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def OpenTypeGaspRangeRecordsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def OpenTypeGaspRangeRecordsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        return o == 0

    #/ https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#opentype-head-table-fields
    # FontInfo
    def OpenTypeHeadCreated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeHeadLowestRecPPEM(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeHeadFlags(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def OpenTypeHeadFlagsAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # FontInfo
    def OpenTypeHeadFlagsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def OpenTypeHeadFlagsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        return o == 0

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#opentype-hhea-table-fields
    # FontInfo
    def OpenTypeHheaAscender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeHheaDescender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeHheaLineGap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeHheaCaretSlopeRise(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeHheaCaretSlopeRun(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeHheaCaretOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#opentype-name-table-fields
    # FontInfo
    def OpenTypeNameDesigner(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameDesignerURL(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameManufacturer(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameManufacturerURL(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameLicense(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameLicenseURL(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameVersion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameUniqueID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameDescription(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNamePreferredFamilyName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNamePreferredSubfamilyName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameCompatibleFullName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameSampleText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameWWSFamilyName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameWWSSubfamilyName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeNameRecords(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from FlatFont.Ufo.OpenTypeNameRecord import OpenTypeNameRecord
            obj = OpenTypeNameRecord()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def OpenTypeNameRecordsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def OpenTypeNameRecordsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        return o == 0

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#opentype-os2-table-fields
    # FontInfo
    def OpenTypeOS2WidthClass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(88))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2WeightClass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(90))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2Selection(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def OpenTypeOS2SelectionAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # FontInfo
    def OpenTypeOS2SelectionLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def OpenTypeOS2SelectionIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        return o == 0

    # FontInfo
    def OpenTypeOS2VendorID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(94))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def OpenTypeOS2Panose(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def OpenTypeOS2PanoseAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # FontInfo
    def OpenTypeOS2PanoseLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def OpenTypeOS2PanoseIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        return o == 0

    # FontInfo
    def OpenTypeOS2FamilyClass(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def OpenTypeOS2FamilyClassAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # FontInfo
    def OpenTypeOS2FamilyClassLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def OpenTypeOS2FamilyClassIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        return o == 0

    # FontInfo
    def OpenTypeOS2UnicodeRanges(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def OpenTypeOS2UnicodeRangesAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # FontInfo
    def OpenTypeOS2UnicodeRangesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def OpenTypeOS2UnicodeRangesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        return o == 0

    # FontInfo
    def OpenTypeOS2CodePageRanges(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def OpenTypeOS2CodePageRangesAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # FontInfo
    def OpenTypeOS2CodePageRangesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def OpenTypeOS2CodePageRangesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        return o == 0

    # FontInfo
    def OpenTypeOS2TypoAscender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(104))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2TypoDescender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(106))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2TypoLineGap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(108))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2WinAscent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(110))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2WinDescent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(112))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2SubscriptXSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(114))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2SubscriptYSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(116))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2SubscriptXOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(118))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2SubscriptYOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(120))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2SuperscriptXSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(122))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2SuperscriptYSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(124))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2SuperscriptXOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(126))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2SuperscriptYOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(128))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2StrikeoutSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(130))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeOS2StrikeoutPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(132))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#opentype-vhea-table-fields
    # FontInfo
    def OpenTypeVheaVertTypoAscender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(134))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def OpenTypeVheaVertTypoDescender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(136))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def OpenTypeVheaVertTypoLineGap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(138))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def OpenTypeVheaCaretSlopeRise(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(140))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeVheaCaretSlopeRun(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(142))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def OpenTypeVheaCaretOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(144))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#postscript-specific-data
    # FontInfo
    def PostscriptFontName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(146))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def PostscriptFullName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(148))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def PostscriptSlantAngle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(150))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def PostscriptUniqueID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(152))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def PostscriptUnderlineThickness(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(154))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def PostscriptUnderlinePosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(156))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def PostscriptIsFixedPitch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(158))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # FontInfo
    def PostscriptBlueValues(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(160))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Float32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def PostscriptBlueValuesAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(160))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # FontInfo
    def PostscriptBlueValuesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(160))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def PostscriptBlueValuesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(160))
        return o == 0

    # FontInfo
    def PostscriptOtherBlues(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(162))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Float32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def PostscriptOtherBluesAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(162))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # FontInfo
    def PostscriptOtherBluesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(162))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def PostscriptOtherBluesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(162))
        return o == 0

    # FontInfo
    def PostscriptFamilyBlues(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(164))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Float32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def PostscriptFamilyBluesAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(164))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # FontInfo
    def PostscriptFamilyBluesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(164))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def PostscriptFamilyBluesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(164))
        return o == 0

    # FontInfo
    def PostscriptFamilyOtherBlues(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(166))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Float32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def PostscriptFamilyOtherBluesAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(166))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # FontInfo
    def PostscriptFamilyOtherBluesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(166))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def PostscriptFamilyOtherBluesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(166))
        return o == 0

    # FontInfo
    def PostscriptStemSnapH(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(168))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Float32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def PostscriptStemSnapHAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(168))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # FontInfo
    def PostscriptStemSnapHLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(168))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def PostscriptStemSnapHIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(168))
        return o == 0

    # FontInfo
    def PostscriptStemSnapV(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(170))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Float32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FontInfo
    def PostscriptStemSnapVAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(170))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # FontInfo
    def PostscriptStemSnapVLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(170))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def PostscriptStemSnapVIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(170))
        return o == 0

    # FontInfo
    def PostscriptBlueFuzz(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(172))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def PostscriptBlueShift(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(174))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def PostscriptBlueScale(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(176))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def PostscriptForceBold(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(178))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # FontInfo
    def PostscriptDefaultWidthX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(180))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def PostscriptNominalWidthX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(182))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # FontInfo
    def PostscriptWeightName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(184))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def PostscriptDefaultCharacter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(186))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FontInfo
    def PostscriptWindowsCharacterSet(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(188))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#macintosh-fond-resource-data
    # FontInfo
    def MacintoshFONDFamilyID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(190))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def MacintoshFONDName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(192))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#woff-data
    # FontInfo
    def WoffMajorVersion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(194))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def WoffMinorVersion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(196))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # FontInfo
    def WoffMetadataUniqueID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(198))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatFont.Ufo.WoffMetadataUniqueID import WoffMetadataUniqueID
            obj = WoffMetadataUniqueID()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def WoffMetadataVendor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(200))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatFont.Ufo.WoffMetadataVendor import WoffMetadataVendor
            obj = WoffMetadataVendor()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def WoffMetadataCredits(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(202))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatFont.Ufo.WoffMetadataCredits import WoffMetadataCredits
            obj = WoffMetadataCredits()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def WoffMetadataDescription(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(204))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatFont.Ufo.WoffMetadataDescription import WoffMetadataDescription
            obj = WoffMetadataDescription()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def WoffMetadataLicense(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(206))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatFont.Ufo.WoffMetadataLicense import WoffMetadataLicense
            obj = WoffMetadataLicense()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def WoffMetadataCopyright(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(208))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatFont.Ufo.WoffMetadataCopyright import WoffMetadataCopyright
            obj = WoffMetadataCopyright()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def WoffMetadataTrademark(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(210))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatFont.Ufo.WoffMetadataTrademark import WoffMetadataTrademark
            obj = WoffMetadataTrademark()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def WoffMetadataLicensee(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(212))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatFont.Ufo.WoffMetadataLicensee import WoffMetadataLicensee
            obj = WoffMetadataLicensee()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def WoffMetadataExtensions(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(214))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from FlatFont.Ufo.WoffMetadataExtension import WoffMetadataExtension
            obj = WoffMetadataExtension()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def WoffMetadataExtensionsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(214))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def WoffMetadataExtensionsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(214))
        return o == 0

    # https://unifiedfontobject.org/versions/ufo3/fontinfo.plist/#guidelines
    # FontInfo
    def Guidelines(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(216))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from FlatFont.Ufo.Guideline import Guideline
            obj = Guideline()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FontInfo
    def GuidelinesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(216))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FontInfo
    def GuidelinesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(216))
        return o == 0

def Start(builder): builder.StartObject(107)
def FontInfoStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddFamilyName(builder, familyName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(familyName), 0)
def FontInfoAddFamilyName(builder, familyName):
    """This method is deprecated. Please switch to AddFamilyName."""
    return AddFamilyName(builder, familyName)
def AddStyleName(builder, styleName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(styleName), 0)
def FontInfoAddStyleName(builder, styleName):
    """This method is deprecated. Please switch to AddStyleName."""
    return AddStyleName(builder, styleName)
def AddStyleMapFamilyName(builder, styleMapFamilyName): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(styleMapFamilyName), 0)
def FontInfoAddStyleMapFamilyName(builder, styleMapFamilyName):
    """This method is deprecated. Please switch to AddStyleMapFamilyName."""
    return AddStyleMapFamilyName(builder, styleMapFamilyName)
def AddStyleMapStyleName(builder, styleMapStyleName): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(styleMapStyleName), 0)
def FontInfoAddStyleMapStyleName(builder, styleMapStyleName):
    """This method is deprecated. Please switch to AddStyleMapStyleName."""
    return AddStyleMapStyleName(builder, styleMapStyleName)
def AddVersionMajor(builder, versionMajor): builder.PrependInt32Slot(4, versionMajor, 0)
def FontInfoAddVersionMajor(builder, versionMajor):
    """This method is deprecated. Please switch to AddVersionMajor."""
    return AddVersionMajor(builder, versionMajor)
def AddVersionMinor(builder, versionMinor): builder.PrependUint32Slot(5, versionMinor, 0)
def FontInfoAddVersionMinor(builder, versionMinor):
    """This method is deprecated. Please switch to AddVersionMinor."""
    return AddVersionMinor(builder, versionMinor)
def AddCopyright(builder, copyright): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(copyright), 0)
def FontInfoAddCopyright(builder, copyright):
    """This method is deprecated. Please switch to AddCopyright."""
    return AddCopyright(builder, copyright)
def AddTrademark(builder, trademark): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(trademark), 0)
def FontInfoAddTrademark(builder, trademark):
    """This method is deprecated. Please switch to AddTrademark."""
    return AddTrademark(builder, trademark)
def AddUnitsPerEm(builder, unitsPerEm): builder.PrependFloat32Slot(9, unitsPerEm, 0.0)
def FontInfoAddUnitsPerEm(builder, unitsPerEm):
    """This method is deprecated. Please switch to AddUnitsPerEm."""
    return AddUnitsPerEm(builder, unitsPerEm)
def AddDescender(builder, descender): builder.PrependFloat32Slot(10, descender, 0.0)
def FontInfoAddDescender(builder, descender):
    """This method is deprecated. Please switch to AddDescender."""
    return AddDescender(builder, descender)
def AddXHeight(builder, xHeight): builder.PrependFloat32Slot(11, xHeight, 0.0)
def FontInfoAddXHeight(builder, xHeight):
    """This method is deprecated. Please switch to AddXHeight."""
    return AddXHeight(builder, xHeight)
def AddCapHeight(builder, capHeight): builder.PrependFloat32Slot(12, capHeight, 0.0)
def FontInfoAddCapHeight(builder, capHeight):
    """This method is deprecated. Please switch to AddCapHeight."""
    return AddCapHeight(builder, capHeight)
def AddAscender(builder, ascender): builder.PrependFloat32Slot(13, ascender, 0.0)
def FontInfoAddAscender(builder, ascender):
    """This method is deprecated. Please switch to AddAscender."""
    return AddAscender(builder, ascender)
def AddItalicAngle(builder, italicAngle): builder.PrependFloat32Slot(14, italicAngle, 0.0)
def FontInfoAddItalicAngle(builder, italicAngle):
    """This method is deprecated. Please switch to AddItalicAngle."""
    return AddItalicAngle(builder, italicAngle)
def AddNote(builder, note): builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(note), 0)
def FontInfoAddNote(builder, note):
    """This method is deprecated. Please switch to AddNote."""
    return AddNote(builder, note)
def AddOpenTypeGaspRangeRecords(builder, openTypeGaspRangeRecords): builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeGaspRangeRecords), 0)
def FontInfoAddOpenTypeGaspRangeRecords(builder, openTypeGaspRangeRecords):
    """This method is deprecated. Please switch to AddOpenTypeGaspRangeRecords."""
    return AddOpenTypeGaspRangeRecords(builder, openTypeGaspRangeRecords)
def StartOpenTypeGaspRangeRecordsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartOpenTypeGaspRangeRecordsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartOpenTypeGaspRangeRecordsVector(builder, numElems)
def AddOpenTypeHeadCreated(builder, openTypeHeadCreated): builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeHeadCreated), 0)
def FontInfoAddOpenTypeHeadCreated(builder, openTypeHeadCreated):
    """This method is deprecated. Please switch to AddOpenTypeHeadCreated."""
    return AddOpenTypeHeadCreated(builder, openTypeHeadCreated)
def AddOpenTypeHeadLowestRecPPEM(builder, openTypeHeadLowestRecPPEM): builder.PrependUint32Slot(18, openTypeHeadLowestRecPPEM, 0)
def FontInfoAddOpenTypeHeadLowestRecPPEM(builder, openTypeHeadLowestRecPPEM):
    """This method is deprecated. Please switch to AddOpenTypeHeadLowestRecPPEM."""
    return AddOpenTypeHeadLowestRecPPEM(builder, openTypeHeadLowestRecPPEM)
def AddOpenTypeHeadFlags(builder, openTypeHeadFlags): builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeHeadFlags), 0)
def FontInfoAddOpenTypeHeadFlags(builder, openTypeHeadFlags):
    """This method is deprecated. Please switch to AddOpenTypeHeadFlags."""
    return AddOpenTypeHeadFlags(builder, openTypeHeadFlags)
def StartOpenTypeHeadFlagsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartOpenTypeHeadFlagsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartOpenTypeHeadFlagsVector(builder, numElems)
def AddOpenTypeHheaAscender(builder, openTypeHheaAscender): builder.PrependInt32Slot(20, openTypeHheaAscender, 0)
def FontInfoAddOpenTypeHheaAscender(builder, openTypeHheaAscender):
    """This method is deprecated. Please switch to AddOpenTypeHheaAscender."""
    return AddOpenTypeHheaAscender(builder, openTypeHheaAscender)
def AddOpenTypeHheaDescender(builder, openTypeHheaDescender): builder.PrependInt32Slot(21, openTypeHheaDescender, 0)
def FontInfoAddOpenTypeHheaDescender(builder, openTypeHheaDescender):
    """This method is deprecated. Please switch to AddOpenTypeHheaDescender."""
    return AddOpenTypeHheaDescender(builder, openTypeHheaDescender)
def AddOpenTypeHheaLineGap(builder, openTypeHheaLineGap): builder.PrependInt32Slot(22, openTypeHheaLineGap, 0)
def FontInfoAddOpenTypeHheaLineGap(builder, openTypeHheaLineGap):
    """This method is deprecated. Please switch to AddOpenTypeHheaLineGap."""
    return AddOpenTypeHheaLineGap(builder, openTypeHheaLineGap)
def AddOpenTypeHheaCaretSlopeRise(builder, openTypeHheaCaretSlopeRise): builder.PrependInt32Slot(23, openTypeHheaCaretSlopeRise, 0)
def FontInfoAddOpenTypeHheaCaretSlopeRise(builder, openTypeHheaCaretSlopeRise):
    """This method is deprecated. Please switch to AddOpenTypeHheaCaretSlopeRise."""
    return AddOpenTypeHheaCaretSlopeRise(builder, openTypeHheaCaretSlopeRise)
def AddOpenTypeHheaCaretSlopeRun(builder, openTypeHheaCaretSlopeRun): builder.PrependInt32Slot(24, openTypeHheaCaretSlopeRun, 0)
def FontInfoAddOpenTypeHheaCaretSlopeRun(builder, openTypeHheaCaretSlopeRun):
    """This method is deprecated. Please switch to AddOpenTypeHheaCaretSlopeRun."""
    return AddOpenTypeHheaCaretSlopeRun(builder, openTypeHheaCaretSlopeRun)
def AddOpenTypeHheaCaretOffset(builder, openTypeHheaCaretOffset): builder.PrependInt32Slot(25, openTypeHheaCaretOffset, 0)
def FontInfoAddOpenTypeHheaCaretOffset(builder, openTypeHheaCaretOffset):
    """This method is deprecated. Please switch to AddOpenTypeHheaCaretOffset."""
    return AddOpenTypeHheaCaretOffset(builder, openTypeHheaCaretOffset)
def AddOpenTypeNameDesigner(builder, openTypeNameDesigner): builder.PrependUOffsetTRelativeSlot(26, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameDesigner), 0)
def FontInfoAddOpenTypeNameDesigner(builder, openTypeNameDesigner):
    """This method is deprecated. Please switch to AddOpenTypeNameDesigner."""
    return AddOpenTypeNameDesigner(builder, openTypeNameDesigner)
def AddOpenTypeNameDesignerURL(builder, openTypeNameDesignerURL): builder.PrependUOffsetTRelativeSlot(27, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameDesignerURL), 0)
def FontInfoAddOpenTypeNameDesignerURL(builder, openTypeNameDesignerURL):
    """This method is deprecated. Please switch to AddOpenTypeNameDesignerURL."""
    return AddOpenTypeNameDesignerURL(builder, openTypeNameDesignerURL)
def AddOpenTypeNameManufacturer(builder, openTypeNameManufacturer): builder.PrependUOffsetTRelativeSlot(28, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameManufacturer), 0)
def FontInfoAddOpenTypeNameManufacturer(builder, openTypeNameManufacturer):
    """This method is deprecated. Please switch to AddOpenTypeNameManufacturer."""
    return AddOpenTypeNameManufacturer(builder, openTypeNameManufacturer)
def AddOpenTypeNameManufacturerURL(builder, openTypeNameManufacturerURL): builder.PrependUOffsetTRelativeSlot(29, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameManufacturerURL), 0)
def FontInfoAddOpenTypeNameManufacturerURL(builder, openTypeNameManufacturerURL):
    """This method is deprecated. Please switch to AddOpenTypeNameManufacturerURL."""
    return AddOpenTypeNameManufacturerURL(builder, openTypeNameManufacturerURL)
def AddOpenTypeNameLicense(builder, openTypeNameLicense): builder.PrependUOffsetTRelativeSlot(30, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameLicense), 0)
def FontInfoAddOpenTypeNameLicense(builder, openTypeNameLicense):
    """This method is deprecated. Please switch to AddOpenTypeNameLicense."""
    return AddOpenTypeNameLicense(builder, openTypeNameLicense)
def AddOpenTypeNameLicenseURL(builder, openTypeNameLicenseURL): builder.PrependUOffsetTRelativeSlot(31, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameLicenseURL), 0)
def FontInfoAddOpenTypeNameLicenseURL(builder, openTypeNameLicenseURL):
    """This method is deprecated. Please switch to AddOpenTypeNameLicenseURL."""
    return AddOpenTypeNameLicenseURL(builder, openTypeNameLicenseURL)
def AddOpenTypeNameVersion(builder, openTypeNameVersion): builder.PrependUOffsetTRelativeSlot(32, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameVersion), 0)
def FontInfoAddOpenTypeNameVersion(builder, openTypeNameVersion):
    """This method is deprecated. Please switch to AddOpenTypeNameVersion."""
    return AddOpenTypeNameVersion(builder, openTypeNameVersion)
def AddOpenTypeNameUniqueID(builder, openTypeNameUniqueID): builder.PrependUOffsetTRelativeSlot(33, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameUniqueID), 0)
def FontInfoAddOpenTypeNameUniqueID(builder, openTypeNameUniqueID):
    """This method is deprecated. Please switch to AddOpenTypeNameUniqueID."""
    return AddOpenTypeNameUniqueID(builder, openTypeNameUniqueID)
def AddOpenTypeNameDescription(builder, openTypeNameDescription): builder.PrependUOffsetTRelativeSlot(34, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameDescription), 0)
def FontInfoAddOpenTypeNameDescription(builder, openTypeNameDescription):
    """This method is deprecated. Please switch to AddOpenTypeNameDescription."""
    return AddOpenTypeNameDescription(builder, openTypeNameDescription)
def AddOpenTypeNamePreferredFamilyName(builder, openTypeNamePreferredFamilyName): builder.PrependUOffsetTRelativeSlot(35, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNamePreferredFamilyName), 0)
def FontInfoAddOpenTypeNamePreferredFamilyName(builder, openTypeNamePreferredFamilyName):
    """This method is deprecated. Please switch to AddOpenTypeNamePreferredFamilyName."""
    return AddOpenTypeNamePreferredFamilyName(builder, openTypeNamePreferredFamilyName)
def AddOpenTypeNamePreferredSubfamilyName(builder, openTypeNamePreferredSubfamilyName): builder.PrependUOffsetTRelativeSlot(36, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNamePreferredSubfamilyName), 0)
def FontInfoAddOpenTypeNamePreferredSubfamilyName(builder, openTypeNamePreferredSubfamilyName):
    """This method is deprecated. Please switch to AddOpenTypeNamePreferredSubfamilyName."""
    return AddOpenTypeNamePreferredSubfamilyName(builder, openTypeNamePreferredSubfamilyName)
def AddOpenTypeNameCompatibleFullName(builder, openTypeNameCompatibleFullName): builder.PrependUOffsetTRelativeSlot(37, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameCompatibleFullName), 0)
def FontInfoAddOpenTypeNameCompatibleFullName(builder, openTypeNameCompatibleFullName):
    """This method is deprecated. Please switch to AddOpenTypeNameCompatibleFullName."""
    return AddOpenTypeNameCompatibleFullName(builder, openTypeNameCompatibleFullName)
def AddOpenTypeNameSampleText(builder, openTypeNameSampleText): builder.PrependUOffsetTRelativeSlot(38, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameSampleText), 0)
def FontInfoAddOpenTypeNameSampleText(builder, openTypeNameSampleText):
    """This method is deprecated. Please switch to AddOpenTypeNameSampleText."""
    return AddOpenTypeNameSampleText(builder, openTypeNameSampleText)
def AddOpenTypeNameWWSFamilyName(builder, openTypeNameWWSFamilyName): builder.PrependUOffsetTRelativeSlot(39, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameWWSFamilyName), 0)
def FontInfoAddOpenTypeNameWWSFamilyName(builder, openTypeNameWWSFamilyName):
    """This method is deprecated. Please switch to AddOpenTypeNameWWSFamilyName."""
    return AddOpenTypeNameWWSFamilyName(builder, openTypeNameWWSFamilyName)
def AddOpenTypeNameWWSSubfamilyName(builder, openTypeNameWWSSubfamilyName): builder.PrependUOffsetTRelativeSlot(40, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameWWSSubfamilyName), 0)
def FontInfoAddOpenTypeNameWWSSubfamilyName(builder, openTypeNameWWSSubfamilyName):
    """This method is deprecated. Please switch to AddOpenTypeNameWWSSubfamilyName."""
    return AddOpenTypeNameWWSSubfamilyName(builder, openTypeNameWWSSubfamilyName)
def AddOpenTypeNameRecords(builder, openTypeNameRecords): builder.PrependUOffsetTRelativeSlot(41, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeNameRecords), 0)
def FontInfoAddOpenTypeNameRecords(builder, openTypeNameRecords):
    """This method is deprecated. Please switch to AddOpenTypeNameRecords."""
    return AddOpenTypeNameRecords(builder, openTypeNameRecords)
def StartOpenTypeNameRecordsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartOpenTypeNameRecordsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartOpenTypeNameRecordsVector(builder, numElems)
def AddOpenTypeOS2WidthClass(builder, openTypeOS2WidthClass): builder.PrependUint32Slot(42, openTypeOS2WidthClass, 0)
def FontInfoAddOpenTypeOS2WidthClass(builder, openTypeOS2WidthClass):
    """This method is deprecated. Please switch to AddOpenTypeOS2WidthClass."""
    return AddOpenTypeOS2WidthClass(builder, openTypeOS2WidthClass)
def AddOpenTypeOS2WeightClass(builder, openTypeOS2WeightClass): builder.PrependUint32Slot(43, openTypeOS2WeightClass, 0)
def FontInfoAddOpenTypeOS2WeightClass(builder, openTypeOS2WeightClass):
    """This method is deprecated. Please switch to AddOpenTypeOS2WeightClass."""
    return AddOpenTypeOS2WeightClass(builder, openTypeOS2WeightClass)
def AddOpenTypeOS2Selection(builder, openTypeOS2Selection): builder.PrependUOffsetTRelativeSlot(44, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeOS2Selection), 0)
def FontInfoAddOpenTypeOS2Selection(builder, openTypeOS2Selection):
    """This method is deprecated. Please switch to AddOpenTypeOS2Selection."""
    return AddOpenTypeOS2Selection(builder, openTypeOS2Selection)
def StartOpenTypeOS2SelectionVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartOpenTypeOS2SelectionVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartOpenTypeOS2SelectionVector(builder, numElems)
def AddOpenTypeOS2VendorID(builder, openTypeOS2VendorID): builder.PrependUOffsetTRelativeSlot(45, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeOS2VendorID), 0)
def FontInfoAddOpenTypeOS2VendorID(builder, openTypeOS2VendorID):
    """This method is deprecated. Please switch to AddOpenTypeOS2VendorID."""
    return AddOpenTypeOS2VendorID(builder, openTypeOS2VendorID)
def AddOpenTypeOS2Panose(builder, openTypeOS2Panose): builder.PrependUOffsetTRelativeSlot(46, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeOS2Panose), 0)
def FontInfoAddOpenTypeOS2Panose(builder, openTypeOS2Panose):
    """This method is deprecated. Please switch to AddOpenTypeOS2Panose."""
    return AddOpenTypeOS2Panose(builder, openTypeOS2Panose)
def StartOpenTypeOS2PanoseVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartOpenTypeOS2PanoseVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartOpenTypeOS2PanoseVector(builder, numElems)
def AddOpenTypeOS2FamilyClass(builder, openTypeOS2FamilyClass): builder.PrependUOffsetTRelativeSlot(47, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeOS2FamilyClass), 0)
def FontInfoAddOpenTypeOS2FamilyClass(builder, openTypeOS2FamilyClass):
    """This method is deprecated. Please switch to AddOpenTypeOS2FamilyClass."""
    return AddOpenTypeOS2FamilyClass(builder, openTypeOS2FamilyClass)
def StartOpenTypeOS2FamilyClassVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartOpenTypeOS2FamilyClassVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartOpenTypeOS2FamilyClassVector(builder, numElems)
def AddOpenTypeOS2UnicodeRanges(builder, openTypeOS2UnicodeRanges): builder.PrependUOffsetTRelativeSlot(48, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeOS2UnicodeRanges), 0)
def FontInfoAddOpenTypeOS2UnicodeRanges(builder, openTypeOS2UnicodeRanges):
    """This method is deprecated. Please switch to AddOpenTypeOS2UnicodeRanges."""
    return AddOpenTypeOS2UnicodeRanges(builder, openTypeOS2UnicodeRanges)
def StartOpenTypeOS2UnicodeRangesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartOpenTypeOS2UnicodeRangesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartOpenTypeOS2UnicodeRangesVector(builder, numElems)
def AddOpenTypeOS2CodePageRanges(builder, openTypeOS2CodePageRanges): builder.PrependUOffsetTRelativeSlot(49, flatbuffers.number_types.UOffsetTFlags.py_type(openTypeOS2CodePageRanges), 0)
def FontInfoAddOpenTypeOS2CodePageRanges(builder, openTypeOS2CodePageRanges):
    """This method is deprecated. Please switch to AddOpenTypeOS2CodePageRanges."""
    return AddOpenTypeOS2CodePageRanges(builder, openTypeOS2CodePageRanges)
def StartOpenTypeOS2CodePageRangesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartOpenTypeOS2CodePageRangesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartOpenTypeOS2CodePageRangesVector(builder, numElems)
def AddOpenTypeOS2TypoAscender(builder, openTypeOS2TypoAscender): builder.PrependInt32Slot(50, openTypeOS2TypoAscender, 0)
def FontInfoAddOpenTypeOS2TypoAscender(builder, openTypeOS2TypoAscender):
    """This method is deprecated. Please switch to AddOpenTypeOS2TypoAscender."""
    return AddOpenTypeOS2TypoAscender(builder, openTypeOS2TypoAscender)
def AddOpenTypeOS2TypoDescender(builder, openTypeOS2TypoDescender): builder.PrependInt32Slot(51, openTypeOS2TypoDescender, 0)
def FontInfoAddOpenTypeOS2TypoDescender(builder, openTypeOS2TypoDescender):
    """This method is deprecated. Please switch to AddOpenTypeOS2TypoDescender."""
    return AddOpenTypeOS2TypoDescender(builder, openTypeOS2TypoDescender)
def AddOpenTypeOS2TypoLineGap(builder, openTypeOS2TypoLineGap): builder.PrependInt32Slot(52, openTypeOS2TypoLineGap, 0)
def FontInfoAddOpenTypeOS2TypoLineGap(builder, openTypeOS2TypoLineGap):
    """This method is deprecated. Please switch to AddOpenTypeOS2TypoLineGap."""
    return AddOpenTypeOS2TypoLineGap(builder, openTypeOS2TypoLineGap)
def AddOpenTypeOS2WinAscent(builder, openTypeOS2WinAscent): builder.PrependUint32Slot(53, openTypeOS2WinAscent, 0)
def FontInfoAddOpenTypeOS2WinAscent(builder, openTypeOS2WinAscent):
    """This method is deprecated. Please switch to AddOpenTypeOS2WinAscent."""
    return AddOpenTypeOS2WinAscent(builder, openTypeOS2WinAscent)
def AddOpenTypeOS2WinDescent(builder, openTypeOS2WinDescent): builder.PrependUint32Slot(54, openTypeOS2WinDescent, 0)
def FontInfoAddOpenTypeOS2WinDescent(builder, openTypeOS2WinDescent):
    """This method is deprecated. Please switch to AddOpenTypeOS2WinDescent."""
    return AddOpenTypeOS2WinDescent(builder, openTypeOS2WinDescent)
def AddOpenTypeOS2SubscriptXSize(builder, openTypeOS2SubscriptXSize): builder.PrependInt32Slot(55, openTypeOS2SubscriptXSize, 0)
def FontInfoAddOpenTypeOS2SubscriptXSize(builder, openTypeOS2SubscriptXSize):
    """This method is deprecated. Please switch to AddOpenTypeOS2SubscriptXSize."""
    return AddOpenTypeOS2SubscriptXSize(builder, openTypeOS2SubscriptXSize)
def AddOpenTypeOS2SubscriptYSize(builder, openTypeOS2SubscriptYSize): builder.PrependInt32Slot(56, openTypeOS2SubscriptYSize, 0)
def FontInfoAddOpenTypeOS2SubscriptYSize(builder, openTypeOS2SubscriptYSize):
    """This method is deprecated. Please switch to AddOpenTypeOS2SubscriptYSize."""
    return AddOpenTypeOS2SubscriptYSize(builder, openTypeOS2SubscriptYSize)
def AddOpenTypeOS2SubscriptXOffset(builder, openTypeOS2SubscriptXOffset): builder.PrependInt32Slot(57, openTypeOS2SubscriptXOffset, 0)
def FontInfoAddOpenTypeOS2SubscriptXOffset(builder, openTypeOS2SubscriptXOffset):
    """This method is deprecated. Please switch to AddOpenTypeOS2SubscriptXOffset."""
    return AddOpenTypeOS2SubscriptXOffset(builder, openTypeOS2SubscriptXOffset)
def AddOpenTypeOS2SubscriptYOffset(builder, openTypeOS2SubscriptYOffset): builder.PrependInt32Slot(58, openTypeOS2SubscriptYOffset, 0)
def FontInfoAddOpenTypeOS2SubscriptYOffset(builder, openTypeOS2SubscriptYOffset):
    """This method is deprecated. Please switch to AddOpenTypeOS2SubscriptYOffset."""
    return AddOpenTypeOS2SubscriptYOffset(builder, openTypeOS2SubscriptYOffset)
def AddOpenTypeOS2SuperscriptXSize(builder, openTypeOS2SuperscriptXSize): builder.PrependInt32Slot(59, openTypeOS2SuperscriptXSize, 0)
def FontInfoAddOpenTypeOS2SuperscriptXSize(builder, openTypeOS2SuperscriptXSize):
    """This method is deprecated. Please switch to AddOpenTypeOS2SuperscriptXSize."""
    return AddOpenTypeOS2SuperscriptXSize(builder, openTypeOS2SuperscriptXSize)
def AddOpenTypeOS2SuperscriptYSize(builder, openTypeOS2SuperscriptYSize): builder.PrependInt32Slot(60, openTypeOS2SuperscriptYSize, 0)
def FontInfoAddOpenTypeOS2SuperscriptYSize(builder, openTypeOS2SuperscriptYSize):
    """This method is deprecated. Please switch to AddOpenTypeOS2SuperscriptYSize."""
    return AddOpenTypeOS2SuperscriptYSize(builder, openTypeOS2SuperscriptYSize)
def AddOpenTypeOS2SuperscriptXOffset(builder, openTypeOS2SuperscriptXOffset): builder.PrependInt32Slot(61, openTypeOS2SuperscriptXOffset, 0)
def FontInfoAddOpenTypeOS2SuperscriptXOffset(builder, openTypeOS2SuperscriptXOffset):
    """This method is deprecated. Please switch to AddOpenTypeOS2SuperscriptXOffset."""
    return AddOpenTypeOS2SuperscriptXOffset(builder, openTypeOS2SuperscriptXOffset)
def AddOpenTypeOS2SuperscriptYOffset(builder, openTypeOS2SuperscriptYOffset): builder.PrependInt32Slot(62, openTypeOS2SuperscriptYOffset, 0)
def FontInfoAddOpenTypeOS2SuperscriptYOffset(builder, openTypeOS2SuperscriptYOffset):
    """This method is deprecated. Please switch to AddOpenTypeOS2SuperscriptYOffset."""
    return AddOpenTypeOS2SuperscriptYOffset(builder, openTypeOS2SuperscriptYOffset)
def AddOpenTypeOS2StrikeoutSize(builder, openTypeOS2StrikeoutSize): builder.PrependInt32Slot(63, openTypeOS2StrikeoutSize, 0)
def FontInfoAddOpenTypeOS2StrikeoutSize(builder, openTypeOS2StrikeoutSize):
    """This method is deprecated. Please switch to AddOpenTypeOS2StrikeoutSize."""
    return AddOpenTypeOS2StrikeoutSize(builder, openTypeOS2StrikeoutSize)
def AddOpenTypeOS2StrikeoutPosition(builder, openTypeOS2StrikeoutPosition): builder.PrependInt32Slot(64, openTypeOS2StrikeoutPosition, 0)
def FontInfoAddOpenTypeOS2StrikeoutPosition(builder, openTypeOS2StrikeoutPosition):
    """This method is deprecated. Please switch to AddOpenTypeOS2StrikeoutPosition."""
    return AddOpenTypeOS2StrikeoutPosition(builder, openTypeOS2StrikeoutPosition)
def AddOpenTypeVheaVertTypoAscender(builder, openTypeVheaVertTypoAscender): builder.PrependFloat32Slot(65, openTypeVheaVertTypoAscender, 0.0)
def FontInfoAddOpenTypeVheaVertTypoAscender(builder, openTypeVheaVertTypoAscender):
    """This method is deprecated. Please switch to AddOpenTypeVheaVertTypoAscender."""
    return AddOpenTypeVheaVertTypoAscender(builder, openTypeVheaVertTypoAscender)
def AddOpenTypeVheaVertTypoDescender(builder, openTypeVheaVertTypoDescender): builder.PrependFloat32Slot(66, openTypeVheaVertTypoDescender, 0.0)
def FontInfoAddOpenTypeVheaVertTypoDescender(builder, openTypeVheaVertTypoDescender):
    """This method is deprecated. Please switch to AddOpenTypeVheaVertTypoDescender."""
    return AddOpenTypeVheaVertTypoDescender(builder, openTypeVheaVertTypoDescender)
def AddOpenTypeVheaVertTypoLineGap(builder, openTypeVheaVertTypoLineGap): builder.PrependFloat32Slot(67, openTypeVheaVertTypoLineGap, 0.0)
def FontInfoAddOpenTypeVheaVertTypoLineGap(builder, openTypeVheaVertTypoLineGap):
    """This method is deprecated. Please switch to AddOpenTypeVheaVertTypoLineGap."""
    return AddOpenTypeVheaVertTypoLineGap(builder, openTypeVheaVertTypoLineGap)
def AddOpenTypeVheaCaretSlopeRise(builder, openTypeVheaCaretSlopeRise): builder.PrependInt32Slot(68, openTypeVheaCaretSlopeRise, 0)
def FontInfoAddOpenTypeVheaCaretSlopeRise(builder, openTypeVheaCaretSlopeRise):
    """This method is deprecated. Please switch to AddOpenTypeVheaCaretSlopeRise."""
    return AddOpenTypeVheaCaretSlopeRise(builder, openTypeVheaCaretSlopeRise)
def AddOpenTypeVheaCaretSlopeRun(builder, openTypeVheaCaretSlopeRun): builder.PrependInt32Slot(69, openTypeVheaCaretSlopeRun, 0)
def FontInfoAddOpenTypeVheaCaretSlopeRun(builder, openTypeVheaCaretSlopeRun):
    """This method is deprecated. Please switch to AddOpenTypeVheaCaretSlopeRun."""
    return AddOpenTypeVheaCaretSlopeRun(builder, openTypeVheaCaretSlopeRun)
def AddOpenTypeVheaCaretOffset(builder, openTypeVheaCaretOffset): builder.PrependInt32Slot(70, openTypeVheaCaretOffset, 0)
def FontInfoAddOpenTypeVheaCaretOffset(builder, openTypeVheaCaretOffset):
    """This method is deprecated. Please switch to AddOpenTypeVheaCaretOffset."""
    return AddOpenTypeVheaCaretOffset(builder, openTypeVheaCaretOffset)
def AddPostscriptFontName(builder, postscriptFontName): builder.PrependUOffsetTRelativeSlot(71, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptFontName), 0)
def FontInfoAddPostscriptFontName(builder, postscriptFontName):
    """This method is deprecated. Please switch to AddPostscriptFontName."""
    return AddPostscriptFontName(builder, postscriptFontName)
def AddPostscriptFullName(builder, postscriptFullName): builder.PrependUOffsetTRelativeSlot(72, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptFullName), 0)
def FontInfoAddPostscriptFullName(builder, postscriptFullName):
    """This method is deprecated. Please switch to AddPostscriptFullName."""
    return AddPostscriptFullName(builder, postscriptFullName)
def AddPostscriptSlantAngle(builder, postscriptSlantAngle): builder.PrependFloat32Slot(73, postscriptSlantAngle, 0.0)
def FontInfoAddPostscriptSlantAngle(builder, postscriptSlantAngle):
    """This method is deprecated. Please switch to AddPostscriptSlantAngle."""
    return AddPostscriptSlantAngle(builder, postscriptSlantAngle)
def AddPostscriptUniqueID(builder, postscriptUniqueID): builder.PrependInt32Slot(74, postscriptUniqueID, 0)
def FontInfoAddPostscriptUniqueID(builder, postscriptUniqueID):
    """This method is deprecated. Please switch to AddPostscriptUniqueID."""
    return AddPostscriptUniqueID(builder, postscriptUniqueID)
def AddPostscriptUnderlineThickness(builder, postscriptUnderlineThickness): builder.PrependFloat32Slot(75, postscriptUnderlineThickness, 0.0)
def FontInfoAddPostscriptUnderlineThickness(builder, postscriptUnderlineThickness):
    """This method is deprecated. Please switch to AddPostscriptUnderlineThickness."""
    return AddPostscriptUnderlineThickness(builder, postscriptUnderlineThickness)
def AddPostscriptUnderlinePosition(builder, postscriptUnderlinePosition): builder.PrependFloat32Slot(76, postscriptUnderlinePosition, 0.0)
def FontInfoAddPostscriptUnderlinePosition(builder, postscriptUnderlinePosition):
    """This method is deprecated. Please switch to AddPostscriptUnderlinePosition."""
    return AddPostscriptUnderlinePosition(builder, postscriptUnderlinePosition)
def AddPostscriptIsFixedPitch(builder, postscriptIsFixedPitch): builder.PrependBoolSlot(77, postscriptIsFixedPitch, 0)
def FontInfoAddPostscriptIsFixedPitch(builder, postscriptIsFixedPitch):
    """This method is deprecated. Please switch to AddPostscriptIsFixedPitch."""
    return AddPostscriptIsFixedPitch(builder, postscriptIsFixedPitch)
def AddPostscriptBlueValues(builder, postscriptBlueValues): builder.PrependUOffsetTRelativeSlot(78, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptBlueValues), 0)
def FontInfoAddPostscriptBlueValues(builder, postscriptBlueValues):
    """This method is deprecated. Please switch to AddPostscriptBlueValues."""
    return AddPostscriptBlueValues(builder, postscriptBlueValues)
def StartPostscriptBlueValuesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartPostscriptBlueValuesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPostscriptBlueValuesVector(builder, numElems)
def AddPostscriptOtherBlues(builder, postscriptOtherBlues): builder.PrependUOffsetTRelativeSlot(79, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptOtherBlues), 0)
def FontInfoAddPostscriptOtherBlues(builder, postscriptOtherBlues):
    """This method is deprecated. Please switch to AddPostscriptOtherBlues."""
    return AddPostscriptOtherBlues(builder, postscriptOtherBlues)
def StartPostscriptOtherBluesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartPostscriptOtherBluesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPostscriptOtherBluesVector(builder, numElems)
def AddPostscriptFamilyBlues(builder, postscriptFamilyBlues): builder.PrependUOffsetTRelativeSlot(80, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptFamilyBlues), 0)
def FontInfoAddPostscriptFamilyBlues(builder, postscriptFamilyBlues):
    """This method is deprecated. Please switch to AddPostscriptFamilyBlues."""
    return AddPostscriptFamilyBlues(builder, postscriptFamilyBlues)
def StartPostscriptFamilyBluesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartPostscriptFamilyBluesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPostscriptFamilyBluesVector(builder, numElems)
def AddPostscriptFamilyOtherBlues(builder, postscriptFamilyOtherBlues): builder.PrependUOffsetTRelativeSlot(81, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptFamilyOtherBlues), 0)
def FontInfoAddPostscriptFamilyOtherBlues(builder, postscriptFamilyOtherBlues):
    """This method is deprecated. Please switch to AddPostscriptFamilyOtherBlues."""
    return AddPostscriptFamilyOtherBlues(builder, postscriptFamilyOtherBlues)
def StartPostscriptFamilyOtherBluesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartPostscriptFamilyOtherBluesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPostscriptFamilyOtherBluesVector(builder, numElems)
def AddPostscriptStemSnapH(builder, postscriptStemSnapH): builder.PrependUOffsetTRelativeSlot(82, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptStemSnapH), 0)
def FontInfoAddPostscriptStemSnapH(builder, postscriptStemSnapH):
    """This method is deprecated. Please switch to AddPostscriptStemSnapH."""
    return AddPostscriptStemSnapH(builder, postscriptStemSnapH)
def StartPostscriptStemSnapHVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartPostscriptStemSnapHVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPostscriptStemSnapHVector(builder, numElems)
def AddPostscriptStemSnapV(builder, postscriptStemSnapV): builder.PrependUOffsetTRelativeSlot(83, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptStemSnapV), 0)
def FontInfoAddPostscriptStemSnapV(builder, postscriptStemSnapV):
    """This method is deprecated. Please switch to AddPostscriptStemSnapV."""
    return AddPostscriptStemSnapV(builder, postscriptStemSnapV)
def StartPostscriptStemSnapVVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartPostscriptStemSnapVVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPostscriptStemSnapVVector(builder, numElems)
def AddPostscriptBlueFuzz(builder, postscriptBlueFuzz): builder.PrependFloat32Slot(84, postscriptBlueFuzz, 0.0)
def FontInfoAddPostscriptBlueFuzz(builder, postscriptBlueFuzz):
    """This method is deprecated. Please switch to AddPostscriptBlueFuzz."""
    return AddPostscriptBlueFuzz(builder, postscriptBlueFuzz)
def AddPostscriptBlueShift(builder, postscriptBlueShift): builder.PrependFloat32Slot(85, postscriptBlueShift, 0.0)
def FontInfoAddPostscriptBlueShift(builder, postscriptBlueShift):
    """This method is deprecated. Please switch to AddPostscriptBlueShift."""
    return AddPostscriptBlueShift(builder, postscriptBlueShift)
def AddPostscriptBlueScale(builder, postscriptBlueScale): builder.PrependFloat32Slot(86, postscriptBlueScale, 0.0)
def FontInfoAddPostscriptBlueScale(builder, postscriptBlueScale):
    """This method is deprecated. Please switch to AddPostscriptBlueScale."""
    return AddPostscriptBlueScale(builder, postscriptBlueScale)
def AddPostscriptForceBold(builder, postscriptForceBold): builder.PrependBoolSlot(87, postscriptForceBold, 0)
def FontInfoAddPostscriptForceBold(builder, postscriptForceBold):
    """This method is deprecated. Please switch to AddPostscriptForceBold."""
    return AddPostscriptForceBold(builder, postscriptForceBold)
def AddPostscriptDefaultWidthX(builder, postscriptDefaultWidthX): builder.PrependFloat32Slot(88, postscriptDefaultWidthX, 0.0)
def FontInfoAddPostscriptDefaultWidthX(builder, postscriptDefaultWidthX):
    """This method is deprecated. Please switch to AddPostscriptDefaultWidthX."""
    return AddPostscriptDefaultWidthX(builder, postscriptDefaultWidthX)
def AddPostscriptNominalWidthX(builder, postscriptNominalWidthX): builder.PrependFloat32Slot(89, postscriptNominalWidthX, 0.0)
def FontInfoAddPostscriptNominalWidthX(builder, postscriptNominalWidthX):
    """This method is deprecated. Please switch to AddPostscriptNominalWidthX."""
    return AddPostscriptNominalWidthX(builder, postscriptNominalWidthX)
def AddPostscriptWeightName(builder, postscriptWeightName): builder.PrependUOffsetTRelativeSlot(90, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptWeightName), 0)
def FontInfoAddPostscriptWeightName(builder, postscriptWeightName):
    """This method is deprecated. Please switch to AddPostscriptWeightName."""
    return AddPostscriptWeightName(builder, postscriptWeightName)
def AddPostscriptDefaultCharacter(builder, postscriptDefaultCharacter): builder.PrependUOffsetTRelativeSlot(91, flatbuffers.number_types.UOffsetTFlags.py_type(postscriptDefaultCharacter), 0)
def FontInfoAddPostscriptDefaultCharacter(builder, postscriptDefaultCharacter):
    """This method is deprecated. Please switch to AddPostscriptDefaultCharacter."""
    return AddPostscriptDefaultCharacter(builder, postscriptDefaultCharacter)
def AddPostscriptWindowsCharacterSet(builder, postscriptWindowsCharacterSet): builder.PrependInt32Slot(92, postscriptWindowsCharacterSet, 0)
def FontInfoAddPostscriptWindowsCharacterSet(builder, postscriptWindowsCharacterSet):
    """This method is deprecated. Please switch to AddPostscriptWindowsCharacterSet."""
    return AddPostscriptWindowsCharacterSet(builder, postscriptWindowsCharacterSet)
def AddMacintoshFONDFamilyID(builder, macintoshFONDFamilyID): builder.PrependInt32Slot(93, macintoshFONDFamilyID, 0)
def FontInfoAddMacintoshFONDFamilyID(builder, macintoshFONDFamilyID):
    """This method is deprecated. Please switch to AddMacintoshFONDFamilyID."""
    return AddMacintoshFONDFamilyID(builder, macintoshFONDFamilyID)
def AddMacintoshFONDName(builder, macintoshFONDName): builder.PrependUOffsetTRelativeSlot(94, flatbuffers.number_types.UOffsetTFlags.py_type(macintoshFONDName), 0)
def FontInfoAddMacintoshFONDName(builder, macintoshFONDName):
    """This method is deprecated. Please switch to AddMacintoshFONDName."""
    return AddMacintoshFONDName(builder, macintoshFONDName)
def AddWoffMajorVersion(builder, woffMajorVersion): builder.PrependUint32Slot(95, woffMajorVersion, 0)
def FontInfoAddWoffMajorVersion(builder, woffMajorVersion):
    """This method is deprecated. Please switch to AddWoffMajorVersion."""
    return AddWoffMajorVersion(builder, woffMajorVersion)
def AddWoffMinorVersion(builder, woffMinorVersion): builder.PrependUint32Slot(96, woffMinorVersion, 0)
def FontInfoAddWoffMinorVersion(builder, woffMinorVersion):
    """This method is deprecated. Please switch to AddWoffMinorVersion."""
    return AddWoffMinorVersion(builder, woffMinorVersion)
def AddWoffMetadataUniqueID(builder, woffMetadataUniqueID): builder.PrependUOffsetTRelativeSlot(97, flatbuffers.number_types.UOffsetTFlags.py_type(woffMetadataUniqueID), 0)
def FontInfoAddWoffMetadataUniqueID(builder, woffMetadataUniqueID):
    """This method is deprecated. Please switch to AddWoffMetadataUniqueID."""
    return AddWoffMetadataUniqueID(builder, woffMetadataUniqueID)
def AddWoffMetadataVendor(builder, woffMetadataVendor): builder.PrependUOffsetTRelativeSlot(98, flatbuffers.number_types.UOffsetTFlags.py_type(woffMetadataVendor), 0)
def FontInfoAddWoffMetadataVendor(builder, woffMetadataVendor):
    """This method is deprecated. Please switch to AddWoffMetadataVendor."""
    return AddWoffMetadataVendor(builder, woffMetadataVendor)
def AddWoffMetadataCredits(builder, woffMetadataCredits): builder.PrependUOffsetTRelativeSlot(99, flatbuffers.number_types.UOffsetTFlags.py_type(woffMetadataCredits), 0)
def FontInfoAddWoffMetadataCredits(builder, woffMetadataCredits):
    """This method is deprecated. Please switch to AddWoffMetadataCredits."""
    return AddWoffMetadataCredits(builder, woffMetadataCredits)
def AddWoffMetadataDescription(builder, woffMetadataDescription): builder.PrependUOffsetTRelativeSlot(100, flatbuffers.number_types.UOffsetTFlags.py_type(woffMetadataDescription), 0)
def FontInfoAddWoffMetadataDescription(builder, woffMetadataDescription):
    """This method is deprecated. Please switch to AddWoffMetadataDescription."""
    return AddWoffMetadataDescription(builder, woffMetadataDescription)
def AddWoffMetadataLicense(builder, woffMetadataLicense): builder.PrependUOffsetTRelativeSlot(101, flatbuffers.number_types.UOffsetTFlags.py_type(woffMetadataLicense), 0)
def FontInfoAddWoffMetadataLicense(builder, woffMetadataLicense):
    """This method is deprecated. Please switch to AddWoffMetadataLicense."""
    return AddWoffMetadataLicense(builder, woffMetadataLicense)
def AddWoffMetadataCopyright(builder, woffMetadataCopyright): builder.PrependUOffsetTRelativeSlot(102, flatbuffers.number_types.UOffsetTFlags.py_type(woffMetadataCopyright), 0)
def FontInfoAddWoffMetadataCopyright(builder, woffMetadataCopyright):
    """This method is deprecated. Please switch to AddWoffMetadataCopyright."""
    return AddWoffMetadataCopyright(builder, woffMetadataCopyright)
def AddWoffMetadataTrademark(builder, woffMetadataTrademark): builder.PrependUOffsetTRelativeSlot(103, flatbuffers.number_types.UOffsetTFlags.py_type(woffMetadataTrademark), 0)
def FontInfoAddWoffMetadataTrademark(builder, woffMetadataTrademark):
    """This method is deprecated. Please switch to AddWoffMetadataTrademark."""
    return AddWoffMetadataTrademark(builder, woffMetadataTrademark)
def AddWoffMetadataLicensee(builder, woffMetadataLicensee): builder.PrependUOffsetTRelativeSlot(104, flatbuffers.number_types.UOffsetTFlags.py_type(woffMetadataLicensee), 0)
def FontInfoAddWoffMetadataLicensee(builder, woffMetadataLicensee):
    """This method is deprecated. Please switch to AddWoffMetadataLicensee."""
    return AddWoffMetadataLicensee(builder, woffMetadataLicensee)
def AddWoffMetadataExtensions(builder, woffMetadataExtensions): builder.PrependUOffsetTRelativeSlot(105, flatbuffers.number_types.UOffsetTFlags.py_type(woffMetadataExtensions), 0)
def FontInfoAddWoffMetadataExtensions(builder, woffMetadataExtensions):
    """This method is deprecated. Please switch to AddWoffMetadataExtensions."""
    return AddWoffMetadataExtensions(builder, woffMetadataExtensions)
def StartWoffMetadataExtensionsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartWoffMetadataExtensionsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartWoffMetadataExtensionsVector(builder, numElems)
def AddGuidelines(builder, guidelines): builder.PrependUOffsetTRelativeSlot(106, flatbuffers.number_types.UOffsetTFlags.py_type(guidelines), 0)
def FontInfoAddGuidelines(builder, guidelines):
    """This method is deprecated. Please switch to AddGuidelines."""
    return AddGuidelines(builder, guidelines)
def StartGuidelinesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FontInfoStartGuidelinesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartGuidelinesVector(builder, numElems)
def End(builder): return builder.EndObject()
def FontInfoEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)