# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Ufo

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class WoffMetadataExtension(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = WoffMetadataExtension()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWoffMetadataExtension(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # WoffMetadataExtension
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # WoffMetadataExtension
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WoffMetadataExtension
    def Names(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from FlatFont.Ufo.WoffMetadataExtensionName import WoffMetadataExtensionName
            obj = WoffMetadataExtensionName()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # WoffMetadataExtension
    def NamesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # WoffMetadataExtension
    def NamesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # WoffMetadataExtension
    def Items(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from FlatFont.Ufo.WoffMetadataExtensionItem import WoffMetadataExtensionItem
            obj = WoffMetadataExtensionItem()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # WoffMetadataExtension
    def ItemsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # WoffMetadataExtension
    def ItemsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

def Start(builder): builder.StartObject(3)
def WoffMetadataExtensionStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, id): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)
def WoffMetadataExtensionAddId(builder, id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, id)
def AddNames(builder, names): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(names), 0)
def WoffMetadataExtensionAddNames(builder, names):
    """This method is deprecated. Please switch to AddNames."""
    return AddNames(builder, names)
def StartNamesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def WoffMetadataExtensionStartNamesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartNamesVector(builder, numElems)
def AddItems(builder, items): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(items), 0)
def WoffMetadataExtensionAddItems(builder, items):
    """This method is deprecated. Please switch to AddItems."""
    return AddItems(builder, items)
def StartItemsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def WoffMetadataExtensionStartItemsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartItemsVector(builder, numElems)
def End(builder): return builder.EndObject()
def WoffMetadataExtensionEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)