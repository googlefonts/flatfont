# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Ufo

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Guideline(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Guideline()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGuideline(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Guideline
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Guideline
    def X(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # Guideline
    def Y(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # Guideline
    def Angle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # Guideline
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Guideline
    def Color(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Guideline
    def Identifier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def GuidelineStart(builder): builder.StartObject(6)
def Start(builder):
    return GuidelineStart(builder)
def GuidelineAddX(builder, x): builder.PrependFloat32Slot(0, x, 0.0)
def AddX(builder, x):
    return GuidelineAddX(builder, x)
def GuidelineAddY(builder, y): builder.PrependFloat32Slot(1, y, 0.0)
def AddY(builder, y):
    return GuidelineAddY(builder, y)
def GuidelineAddAngle(builder, angle): builder.PrependFloat32Slot(2, angle, 0.0)
def AddAngle(builder, angle):
    return GuidelineAddAngle(builder, angle)
def GuidelineAddName(builder, name): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def AddName(builder, name):
    return GuidelineAddName(builder, name)
def GuidelineAddColor(builder, color): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(color), 0)
def AddColor(builder, color):
    return GuidelineAddColor(builder, color)
def GuidelineAddIdentifier(builder, identifier): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(identifier), 0)
def AddIdentifier(builder, identifier):
    return GuidelineAddIdentifier(builder, identifier)
def GuidelineEnd(builder): return builder.EndObject()
def End(builder):
    return GuidelineEnd(builder)